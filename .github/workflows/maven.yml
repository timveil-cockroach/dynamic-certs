# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          cache: 'maven'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t dynamic-certs:${{ github.sha }} .

      - name: Test Docker Image Health Endpoint
        run: |
          docker run --rm -d --name test-container \
            -e NODE_ALTERNATIVE_NAMES=localhost \
            -p 9999:9999 dynamic-certs:${{ github.sha }}
          sleep 15
          curl -f http://localhost:9999/actuator/health || (docker logs test-container && exit 1)
          docker stop test-container

      - name: Build Multi-Platform Docker Image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t timveil/cockroachdb-dynamic-certs:ci-${{ github.sha }} .

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dynamic-certs:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Scan Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
